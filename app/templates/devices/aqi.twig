<!DOCTYPE html>
<html>
<head>
{% include('nav.twig') %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>

  <!-- Ionicons -->
  <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
  <!-- Google Font: Source Sans Pro -->

</head>
<body>
   {% include('sidebar.twig') %}
         {% include('css_userinfo.twig') %}

   <!-- Google Font: Source Sans Pro -->
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
<!--     <div class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
          <div class="col-sm-6">
            <h1 class="m-0 text-dark">Dashboard</h1>
          </div>
          <div class="col-sm-6">
            <ol class="breadcrumb float-sm-right">
              <li class="breadcrumb-item"><a href="#">Home</a></li>
              <li class="breadcrumb-item active">Dashboard v1</li>
            </ol>
          </div>
        </div>
      </div>
    </div> -->
    <!-- /.content-header -->

<div class="row">
          <div class="col-12">
            <!-- jQuery Knob -->
            <div class="card">
              <div class="card-header">
                <h3 class="card-title">
                  <i class="far fa-chart-bar"></i>
                  Your Air Quality Index
                </h3>

                <div class="card-tools">
                  <button type="button" class="btn btn-tool" data-card-widget="collapse"><i
                      class="fas fa-minus"></i>
                  </button>
                  <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i>
                  </button>
                </div>
              </div>
              <!-- /.card-header -->
              <div class="card-body" style="height: 200px;align-items: center;align-content: center;align-self: center;">

  

<!--                     <div class="knob-label">data-width="90"</div>
 -->
                    <input type="text" class="knob" id="pm2_5_aqi" value="90" data-width="150" data-height="150" data-fgColor="#00a65a" data-readonly="true" >pm2.5

<!--                     <div class="knob-label">New Visitors</div>
 -->
                    <input type="text" class="knob" id="pm10_aqi" value="70" data-width="150" data-height="150" data-fgColor="#f56954" data-readonly="true">pm10

<!--                     <div class="knob-label">Bounce Rate</div>
 -->
                    <input type="text" class="knob" id="no2_aqi" value="80" data-min="-150" data-max="150" data-width="150"
                           data-height="150" data-fgColor="#00a65a" data-readonly="true">NO2

<!--                     <div class="knob-label">Server Load</div>
 -->
                    <input type="text" class="knob" id="co_aqi" value="40" data-width="150" data-height="150" data-fgColor="#00a65a" data-readonly="true" >CO

<!--                     <div class="knob-label">Disk Space</div>
 -->

                    <input type="text" class="knob" id="so2_aqi" value="90" data-width="150" data-height="150" data-fgColor="#00a65a" data-readonly="true" >SO2

<!--                     <div class="knob-label">Bandwidth</div>
 -->                    
                    <input type="text" class="knob" id="o3_aqi" value="50" data-width="150" data-height="150" data-fgColor="#00a65a" data-readonly="true" >O3

<!--                     <div class="knob-label">CPU</div>

              </div>
              <!-- /.card-body -->
            </div>
            <!-- /.card -->
          </div>
          <!-- /.col -->
        </div>
        <!-- /.row -->

        <div>
          <div style="width: 700px;height: 700px; padding-left: 50px;float: left;">
            <div id="map"></div>
    <script>
      // This example creates circles on the map, representing populations in North
      // America.

      // First, create an object containing LatLng and population for each city.
      var citymap = {
        chicago: {
          center: {lat: 41.878, lng: -87.629},
          population: 2714856
        },
        newyork: {
          center: {lat: 40.714, lng: -74.005},
          population: 8405837
        },
        losangeles: {
          center: {lat: 34.052, lng: -118.243},
          population: 3857799
        },
        vancouver: {
          center: {lat: 49.25, lng: -123.1},
          population: 603502
        }
      };

      function initMap() {
        // Create the map.
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 4,
          center: {lat: 37.090, lng: -95.712},
          mapTypeId: 'terrain'
        });

        // Construct the circle for each value in citymap.
        // Note: We scale the area of the circle based on the population.
        for (var city in citymap) {
          // Add the circle for this city to the map.
          var cityCircle = new google.maps.Circle({
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000',
            fillOpacity: 0.35,
            map: map,
            center: citymap[city].center,
            radius: Math.sqrt(citymap[city].population) * 100
          });
        }
      }
    </script>
           </div>

    <!-- Main content -->
    

<!-- DONUT CHART -->

        <div style="float: left;">
          <div>

              <!-- /.card-body -->

              <div class="card-body" style="float: left;">
                <canvas class="chart" id="line-chart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
              </div>
          </div>
              <script type="text/javascript">
                  var aqi_data; 
                  $.ajax({
                    type:"GET",
                    url:"/get_aqi",
                    success: function(data) {
                        console.log("SUCCESS: ", data);
                        aqi_data = data;
                        
                        alert(aqi_data);
                        for (i in aqi_data[0]) {
                          if(i!="longitude"&&i!="latitude"&&i!="udoo_sn"){
                            document.getElementById(i).value = aqi_data[0][i];
                            if(document.getElementById(i).value>50){
                              if(i=="pm2_5_aqi"){
                                $('#pm2_5_aqi').knob({
                                  fgColor: 'red'
                                });  
                              }
                              if(i=="pm10_aqi"){
                                $('#pm10_aqi').knob({
                                  fgColor: 'red'
                                });  
                              }
                              if(i=="co_aqi"){
                                $('#co_aqi').knob({
                                  fgColor: 'red'
                                });  
                              }
                              if(i=="no2_aqi"){
                                $('#no2_aqi').knob({
                                  fgColor: 'red'
                                });  
                              }
                              if(i=="so2_aqi"){
                                $('#so2_aqi').knob({
                                  fgColor: 'red'
                                });  
                              }
                              if(i=="o3_aqi"){
                                $('#o3_aqi').knob({
                                  fgColor: 'red'
                                });  
                              }
                            }
                          }
                        }
                    },
                    error: function(data) {
                        console.log('ERROR: ', data);
                    },
                  });

                  new Chart(document.getElementById("line-chart"), {
                  type: 'line',
                  data: {
                    labels: [2,4,6,8,10,12,14,16,18,20,22,24],
                    datasets: [{ 
                        data: [36,44,49,36,37,31,43,31,33,38,35,33],
                        label: "pm2.5",
                        borderColor: "#3e95cd",
                        fill: false
                      }, { 
                        data: [42,45,51,52,55,59,57,66,70,68,72,70],
                        label: "pm10",
                        borderColor: "#8e5ea2",
                        fill: false
                      }, { 
                        data: [86,74,69,56,47,41,43,41,53,48,45,40],
                        label: "NO2",
                        borderColor: "#3cba9f",
                        fill: false
                      }, { 
                        data: [40,50,60,66,64,68,74,77,81,85,88,90],
                        label: "CO",
                        borderColor: "#e8c3b9",
                        fill: false
                      }, { 
                        data: [56,53,52,52,47,46,42,42,52,57,56,50],
                        label: "SO2",
                        borderColor: "#c45850",
                        fill: false
                      }
                    ]
                  },
                  options: {
                    title: {
                      display: true,
                      text: 'World population per region (in millions)'
                    }
                  }
                });

            </script>







          <div class="container" style="width: 100%;margin-top: 40%">
                     
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>MacAddress</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>John</td>
                    <td>Polar</td>
                    <td>2f3lasbsl2f32f3la56lai2</td>
                  </tr>
                  <tr>
                    <td>Mary</td>
                    <td>Polar</td>
                    <td>2f3las2b2as32f3lasbsl2f3</td>
                  </tr>
                  <tr>
                    <td>July</td>
                    <td>Udoo</td>
                    <td>2f4la5b6l2f32f3la56lai2</td>
                  </tr>
                  <tr>
                    <td>July</td>
                    <td>Polar</td>
                    <td>2f3la56lai22f3lasbsl2f3</td>
                  </tr>
                  <tr>
                    <td>July</td>
                    <td>Udoo</td>
                    <td>2f3las12g3a2f3la56lai2</td>
                  </tr>
                  <tr>
                    <td>July</td>
                    <td>Polar</td>
                    <td>2f3lasbsl2f32f3la56lai2</td>
                  </tr>
                </tbody>
              </table>
          </div>

        </div>
      </div>
  <!-- /.content-wrapper -->
  <footer class="main-footer">
    <strong>Copyright &copy; 2014-2019 <a href="http://adminlte.io">AdminLTE.io</a>.</strong>
    All rights reserved.
    <div class="float-right d-none d-sm-inline-block">
      <b>Version</b> 3.0.3-pre
    </div>
  </footer>

  <!-- Control Sidebar -->
  <aside class="control-sidebar control-sidebar-dark">
    <!-- Control sidebar content goes here -->
  </aside>
  <!-- /.control-sidebar -->
</div>
<!-- ./wrapper -->
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA52Ka6h4PSlrzq594lkybvqL6FOQ9Bx_c&callback=initMap">
    </script>
 
<script src="{{ base_url() }}/dist/js/adminlte.min.js"></script>
<!-- AdminLTE for demo purposes -->

<script src="{{ base_url() }}/plugins/sparklines/sparkline.js"></script>
<!-- page script -->

<!-- jQuery -->
<script src="{{ base_url() }}/plugins/jquery/jquery.min.js"></script>
<!-- jQuery UI 1.11.4 -->
<script src="{{ base_url() }}/plugins/jquery-ui/jquery-ui.min.js"></script>
<!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
<script>
  $.widget.bridge('uibutton', $.ui.button)
</script>
<!-- Bootstrap 4 -->
<script src="{{ base_url() }}/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- ChartJS -->
<script src="{{ base_url() }}/plugins/chart.js/Chart.min.js"></script>
<!-- Sparkline -->
<script src="{{ base_url() }}/plugins/sparklines/sparkline.js"></script>


<!-- JQVMap -->
<!-- jQuery Knob Chart -->
<script src="{{ base_url() }}/plugins/jquery-knob/jquery.knob.min.js"></script>
<!-- daterangepicker -->
<script src="{{ base_url() }}/plugins/moment/moment.min.js"></script>
<script src="{{ base_url() }}/plugins/daterangepicker/daterangepicker.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="{{ base_url() }}/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.jplugins/summernote/summernote-bs4.min.js"></script>
<!-- overlayScrollbars -->
<script src="{{ base_url() }}/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
<!-- AdminLTE App -->
<script src="{{ base_url() }}/dist/js/adminlte.js"></script>
<!-- AdminLTE dashboard demo (This is only for demo purposes) -->
<script src="{{ base_url() }}/dist/js/pages/dashboard.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="{{ base_url() }}/dist/js/demo.js"></script>



<script src="{{ base_url() }}/plugins/summernote/summernote-bs4.min.js"></script>
<!-- overlayScrollbars -->




<script>



  $(function () {
    /* jQueryKnob */

    $('.knob').knob({
      /*change : function (value) {
       //console.log("change : " + value);
       },
       release : function (value) {
       console.log("release : " + value);
       },
       cancel : function () {
       console.log("cancel : " + this.value);
       },*/
      draw: function () {

        // "tron" case
        if (this.$.data('skin') == 'tron') {

          var a   = this.angle(this.cv)  // Angle
            ,
              sa  = this.startAngle          // Previous start angle
            ,
              sat = this.startAngle         // Start angle
            ,
              ea                            // Previous end angle
            ,
              eat = sat + a                 // End angle
            ,
              r   = true

          this.g.lineWidth = this.lineWidth

          this.o.cursor
          && (sat = eat - 0.3)
          && (eat = eat + 0.3)

          if (this.o.displayPrevious) {
            ea = this.startAngle + this.angle(this.value)
            this.o.cursor
            && (sa = ea - 0.3)
            && (ea = ea + 0.3)
            this.g.beginPath()
            this.g.strokeStyle = this.previousColor
            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false)
            this.g.stroke()
          }

          this.g.beginPath()
          this.g.strokeStyle = r ? this.o.fgColor : this.fgColor
          this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false)
          this.g.stroke()

          this.g.lineWidth = 2
          this.g.beginPath()
          this.g.strokeStyle = this.o.fgColor
          this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false)
          this.g.stroke()

          return false
        }
      }
    })
    /* END JQUERY KNOB */

    //INITIALIZE SPARKLINE CHARTS
    $('.sparkline').each(function () {
      var $this = $(this)
      $this.sparkline('html', $this.data())
    })

    /* SPARKLINE DOCUMENTATION EXAMPLES http://omnipotent.net/jquery.sparkline/#s-about */
    drawDocSparklines()
    drawMouseSpeedDemo()

  })

  function drawDocSparklines() {

    // Bar + line composite charts
    $('#compositebar').sparkline('html', {
      type    : 'bar',
      barColor: '#aaf'
    })
    $('#compositebar').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7],
      {
        composite: true,
        fillColor: false,
        lineColor: 'red'
      })


    // Line charts taking their values from the tag
    $('.sparkline-1').sparkline()

    // Larger line charts for the docs
    $('.largeline').sparkline('html',
      {
        type  : 'line',
        height: '2.5em',
        width : '4em'
      })

    // Customized line chart
    $('#linecustom').sparkline('html',
      {
        height      : '1.5em',
        width       : '8em',
        lineColor   : '#f00',
        fillColor   : '#ffa',
        minSpotColor: false,
        maxSpotColor: false,
        spotColor   : '#77f',
        spotRadius  : 3
      })

    // Bar charts using inline values
    $('.sparkbar').sparkline('html', { type: 'bar' })



    // Tri-state charts using inline values
    $('.sparktristate').sparkline('html', { type: 'tristate' })
    $('.sparktristatecols').sparkline('html',
      {
        type    : 'tristate',
        colorMap: {
          '-2': '#fa7',
          '2' : '#44f'
        }
      })

    // Composite line charts, the second using values supplied via javascript
    $('#compositeline').sparkline('html', {
      fillColor     : false,
      changeRangeMin: 0,
      chartRangeMax : 10
    })
    $('#compositeline').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7],
      {
        composite     : true,
        fillColor     : false,
        lineColor     : 'red',
        changeRangeMin: 0,
        chartRangeMax : 10
      })

    // Line charts with normal range marker
    $('#normalline').sparkline('html',
      {
        fillColor     : false,
        normalRangeMin: -1,
        normalRangeMax: 8
      })
    $('#normalExample').sparkline('html',
      {
        fillColor       : false,
        normalRangeMin  : 80,
        normalRangeMax  : 95,
        normalRangeColor: '#4f4'
      })

    // Discrete charts
    $('.discrete1').sparkline('html',
      {
        type     : 'discrete',
        lineColor: 'blue',
        xwidth   : 18
      })
    $('#discrete2').sparkline('html',
      {
        type          : 'discrete',
        lineColor     : 'blue',
        thresholdColor: 'red',
        thresholdValue: 4
      })

    // Bullet charts
    $('.sparkbullet').sparkline('html', { type: 'bullet' })

    // Pie charts
    $('.sparkpie').sparkline('html', {
      type  : 'pie',
      height: '1.0em'
    })

    // Box plots
    $('.sparkboxplot').sparkline('html', { type: 'box' })
    $('.sparkboxplotraw').sparkline([1, 3, 5, 8, 10, 15, 18],
      {
        type        : 'box',
        raw         : true,
        showOutliers: true,
        target      : 6
      })

    // Box plot with specific field order
    $('.boxfieldorder').sparkline('html', {
      type                     : 'box',
      tooltipFormatFieldlist   : ['med', 'lq', 'uq'],
      tooltipFormatFieldlistKey: 'field'
    })

    // click event demo sparkline
    $('.clickdemo').sparkline()
    $('.clickdemo').bind('sparklineClick', function (ev) {
      var sparkline = ev.sparklines[0],
          region    = sparkline.getCurrentRegionFields()
      value         = region.y
      alert('Clicked on x=' + region.x + ' y=' + region.y)
    })

    // mouseover event demo sparkline
    $('.mouseoverdemo').sparkline()
    $('.mouseoverdemo').bind('sparklineRegionChange', function (ev) {
      var sparkline = ev.sparklines[0],
          region    = sparkline.getCurrentRegionFields()
      value         = region.y
      $('.mouseoverregion').text('x=' + region.x + ' y=' + region.y)
    }).bind('mouseleave', function () {
      $('.mouseoverregion').text('')
    })
  }

  /**
   ** Draw the little mouse speed animated graph
   ** This just attaches a handler to the mousemove event to see
   ** (roughly) how far the mouse has moved
   ** and then updates the display a couple of times a second via
   ** setTimeout()
   **/
  function drawMouseSpeedDemo() {
    var mrefreshinterval = 500 // update display every 500ms
    var lastmousex       = -1
    var lastmousey       = -1
    var lastmousetime
    var mousetravel      = 0
    var mpoints          = []
    var mpoints_max      = 30
    $('html').mousemove(function (e) {
      var mousex = e.pageX
      var mousey = e.pageY
      if (lastmousex > -1) {
        mousetravel += Math.max(Math.abs(mousex - lastmousex), Math.abs(mousey - lastmousey))
      }
      lastmousex = mousex
      lastmousey = mousey
    })
    var mdraw = function () {
      var md      = new Date()
      var timenow = md.getTime()
      if (lastmousetime && lastmousetime != timenow) {
        var pps = Math.round(mousetravel / (timenow - lastmousetime) * 1000)
        mpoints.push(pps)
        if (mpoints.length > mpoints_max) {
          mpoints.splice(0, 1)
        }
        mousetravel = 0
        $('#mousespeed').sparkline(mpoints, {
          width        : mpoints.length * 2,
          tooltipSuffix: ' pixels per second'
        })
      }
      lastmousetime = timenow
      setTimeout(mdraw, mrefreshinterval)
    }
    // We could use setInterval instead, but I prefer to do it this way
    setTimeout(mdraw, mrefreshinterval);
  }
</script>




</body>
</html>





